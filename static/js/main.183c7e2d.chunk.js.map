{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICwBvDC,EA3BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC9BC,oBAAS,GADqB,mBACjDC,EADiD,KAC1CC,EAD0C,KAElDC,EAAMP,EAAIQ,KAAK,KAEfC,GADMd,EAAQ,WAAR,cAAYK,IACV,WAAOG,IAOrB,OANAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAEF,6BACES,UAAS,gBAAWZ,EAAQ,IAAM,eAClCa,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAT,MACxBU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,KAGhC,uBAAGK,UAAU,iBAAiBb,EAA9B,KACA,uBAAGa,UAAU,eAAeL,GAC3BJ,GAAS,uBAAGS,UAAU,SAAb,yB,gBC6BDO,MAjDf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAgBb,OACE,oCACE,6BAASf,UAAU,aACjB,+CACA,0BAAMgB,SAfS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACR,MAAOT,GACPC,GAAS,GACTS,QAAQC,IAAIX,MASR,2BACEY,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAACP,GAAD,OAAOR,EAASQ,EAAEQ,OAAOF,QACnCG,YAAY,UACZ1B,UAAS,UAAKU,EAAQ,QAAU,QAElC,4BAAQV,UAAU,MAAMsB,KAAK,UAA7B,YAKJ,6BAAStB,UAAU,UAChBc,EAAKa,KAAI,SAACnB,EAAOpB,GAChB,OACE,kBAAC,EAAD,eACEwC,IAAKxC,GACDoB,EAFN,CAGEpB,MAAOA,EACPC,SAAUmB,EAAM9B,aCxC9BmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.183c7e2d.chunk.js","sourcesContent":["function componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils'\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\r\n  const [alert, setAlert] = useState(false)\r\n  const bcg = rgb.join(',')\r\n  const hex = rgbToHex(...rgb)\r\n  const hexValue = `#${hexColor}`\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert(false)\r\n    }, 3000)\r\n    return () => clearTimeout(timeout)\r\n  }, [alert])\r\n  return (\r\n    <article\r\n      className={`color ${index > 10 && 'color-light'}`}\r\n      style={{ backgroundColor: `rgb(${bcg})` }}\r\n      onClick={() => {\r\n        setAlert(true)\r\n        navigator.clipboard.writeText(hexValue)\r\n      }}\r\n    >\r\n      <p className='percent-value'>{weight}%</p>\r\n      <p className='color-value'>{hexValue}</p>\r\n      {alert && <p className='alert'>copied to clipboard</p>}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default SingleColor","import React, { useState } from 'react'\r\nimport SingleColor from './SingleColor'\r\n\r\nimport Values from 'values.js'\r\n\r\nfunction App() {\r\n  const [color, setColor] = useState('')\r\n  const [error, setError] = useState(false)\r\n  const [list, setList] = useState(new Values('#f15025').all(10))\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      let colors = new Values(color).all(10)\r\n      setList(colors)\r\n    } catch (error) {\r\n      setError(true)\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className='container'>\r\n        <h3>color generator</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type='text'\r\n            value={color}\r\n            onChange={(e) => setColor(e.target.value)}\r\n            placeholder='#f15025'\r\n            className={`${error ? 'error' : null}`}\r\n          />\r\n          <button className='btn' type='submit'>\r\n            submit\r\n          </button>\r\n        </form>\r\n      </section>\r\n      <section className='colors'>\r\n        {list.map((color, index) => {\r\n          return (\r\n            <SingleColor\r\n              key={index}\r\n              {...color}\r\n              index={index}\r\n              hexColor={color.hex}\r\n            />\r\n          )\r\n        })}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}